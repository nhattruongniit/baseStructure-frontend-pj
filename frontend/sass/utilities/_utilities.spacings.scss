/* ==========================================================================
   #SPACINGS
   ========================================================================== */

/**
 * Utility classes to put specific spacing values onto elements. The below loop
 * will generate us a suite of classes like:
 *
 *   .u-margin-top {}
 *   .u-padding-left-large {}
 *   .u-margin-right-small {}
 *   .u-padding {}
 *   .u-padding-right-none {}
 *   .u-padding-horizontal {}
 *   .u-padding-vertical-small {}
 */

/* stylelint-disable string-quotes */

$spacing-directions: (
        null: null,
        '-top': '-top',
        '-right': '-right',
        '-bottom': '-bottom',
        '-left': '-left',
        '-horizontal': '-left' '-right',
        '-vertical': '-top' '-bottom',
) !default;

$spacing-properties: (
        'padding': 'padding',
        'margin': 'margin',
) !default;

$spacing-sizes: (
        null: $global-spacing-unit,
        '-base': $global-spacing-margin-unit,
        '-tiny': $global-spacing-unit-tiny,
        '-small': $global-spacing-unit-small,
        '-large': $global-spacing-unit-large,
        '-extra-large': $global-spacing-unit-extra-large,
        '-huge': $global-spacing-unit-huge,
        '-extra-huge': $global-spacing-unit-extra-huge,
        '-none': 0
) !default;

// Build spacing base on spacing unit

@each $property-namespace, $property in $spacing-properties {

    @each $direction-namespace, $direction-rules in $spacing-directions {

        @each $size-namespace, $size in $spacing-sizes {

            .u-#{$property-namespace}#{$direction-namespace}#{$size-namespace} {

                @each $direction in $direction-rules {
                    #{$property}#{$direction}: $size !important;
                }

            }

        }

    }

}

// Build spacing base on margin spacing unit

@each $property-namespace, $property in $spacing-properties {

    @each $direction-namespace, $direction-rules in $spacing-directions {

        @each $size in $global-spacing-margin-fractions {

            .u-#{$property-namespace}#{$direction-namespace}-#{$size}x {

                @each $direction in $direction-rules {
                    #{$property}#{$direction}: round($size * $global-spacing-margin-unit) !important;
                }

            }

        }

    }

}


/* stylelint-enable string-quotes */
